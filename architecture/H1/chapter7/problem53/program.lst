Machine-level Assembler Version 6.1    Sun Mar 15 19:11:18 2009

  LOC    OBJ   SOURCE
hex*dec

               ;---------------------------------------------------------------
               ; Translate the program 7.53 to assembly languague.
               ;---------------------------------------------------------------
               
               ;--------------------------------------
               ; int f(int x, int y, int z)
               ;--------------------------------------
               
0  *0    4001  f:	ldr	1	; cout << x << " " << y << " " << z << endl;
1  *1    FFFD  	dout
2  *2    8024  	ldc	msg
3  *3    FFF7  	sout
4  *4    4002  	ldr	2
5  *5    FFFD  	dout
6  *6    8024  	ldc	msg
7  *7    FFF7  	sout
8  *8    4003  	ldr	3
9  *9    FFFD  	dout
A  *10   800A  	ldc	'\n'
B  *11   FFFB  	aout
               
C  *12   8001  	ldc	1 	; return 1
D  *13   F000  	ret		; return to the calling function
               
               ;---------------------------------------
               ; int g(int a, int b, int c)
               ;---------------------------------------
               
E  *14   4001  g:	ldr	1	; return f(c, b, a) + 10;
F  *15   F300  	push
10 *16   4003  	ldr	3
11 *17   F300  	push
12 *18   4005  	ldr	5
13 *19   F300  	push
14 *20   E000  	call	f
15 *21   F603  	dloc	3
16 *22   2026  	add	@10
               
17 *23   F000  	ret		; return to the calling function
               		
               ;----------------------------------------
               ; main()
               ;----------------------------------------
               
18 *24   8003  main:	ldc	3	; cout << g(1, 2, 3) << endl;
19 *25   F300  	push
1A *26   8002  	ldc	2
1B *27   F300  	push
1C *28   8001  	ldc	1
1D *29   F300  	push
1E *30   E00E  	call	g
1F *31   F603  	dloc	3
20 *32   FFFD  	dout
21 *33   800A  	ldc	'\n'
22 *34   FFFB  	aout
               
23 *35   FFFF  	halt		; end of the program
               
               	end main
               
               ; GLOBAL VARIABLES
24 *36   0020  msg:	dw	" "
25 *37   0000
26 *38   000A  @10:	dw	10
27 *39   ========= end of program.mas ============================


         Symbol/Cross-Reference Table

Symbol                   Address     References
                          (hex)       (hex)

 f                         0           14 
 g                         E           1E 
 main                      18          24 
 msg                       24          2   6  
 @10                       26          16 

Input file   = program.mas
Output file  = program.mac
List file    = program.lst 
Number base  = decimal
Label status = case sensitive
